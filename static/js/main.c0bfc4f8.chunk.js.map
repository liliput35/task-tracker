{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddForm.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","defaultProps","Header","title","onAdd","showAdd","Footer","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","Task","AddForm","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","currentTarget","checked","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTask","taskFromServer","getTasks","fetch","res","json","data","fetch1Task","deleteTask","method","filter","toggleReminder","taskToToggle","updTask","headers","body","JSON","stringify","addTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0bfc4f8.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n  \r\n    return (\r\n        <button onClick={onClick} className='btn' style={{ backgroundColor: color,}}>{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n\r\nconst Header = ( {title, onAdd, showAdd } ) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\n\r\nexport default Header\r\n","\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <p>Built by Lorenz Ciocon</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' :''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text} \r\n                <FaTimes  \r\n                style={{color: 'red', cursor: 'pointer'}}\r\n                onClick={() => onDelete(task.id)}\r\n                 />\r\n                </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    \r\n\r\n    return (\r\n        <>\r\n            {tasks.map((task, index) =>(\r\n            <Task key={index} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n            )\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from \"react\"\r\n\r\nconst AddForm = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => \r\n                setText(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => \r\n                setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' value={reminder} onChange={(e) => \r\n                setReminder(e.currentTarget.checked)} \r\n                checked={ reminder }/>\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task' className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddForm\r\n","import { useState, useEffect } from \"react\"\nimport React from 'react';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddForm from './components/AddForm'\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect( () => {\n    const getTasks = async () => {\n      const taskFromServer = await fetchTask()\n      setTasks(taskFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // fetch tasks\n  const fetchTask = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n  // fetch task\n  const fetch1Task = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  //delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, \n    {\n      method: 'DELETE'\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //toggle reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetch1Task (id)\n    const updTask = {...taskToToggle, \n    reminder: !taskToToggle.reminder }\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`,{ \n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json'\n    }, \n    body: JSON.stringify(updTask)\n  })\n\n    const data = await res.json()\n\n    setTasks(\n      tasks.map((task) =>\n       task.id === id ? \n    {...task, reminder: data.reminder} : task))\n  }\n\n  //addTask\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST', \n      headers: {\n        'Content-type': 'application/json'\n      }, \n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n\n    //const id = Math.floor(Math.random() * 10000) + 1;\n\n    //const newTask = { id, ...task }\n    //setTasks([...tasks, newTask])\n  }\n\n  return (\n    <div className=\"container\">\n     <Header onAdd={ () => setShowAddTask(!showAddTask)}\n     showAdd={showAddTask}/>\n     {showAddTask && <AddForm onAdd={addTask}/>}\n     {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n      : 'No Tasks To Show'}\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}